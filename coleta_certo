const i2cBus = i2c.openSync(1); // Abre o barramento I2C (pode ser 1 ou 0 dependendo do Raspberry Pi)

i2cBus.readI2cBlock(8, 3, 3, Buffer.alloc(3), (err, bytesRead, buffer) => {
  if (err) {
    console.error('Erro na leitura I2C:', err);
    return;
  }

  const tipo = String.fromCharCode(buffer[0]);
  const valor = buffer.readFloatLE(1);

  if (tipo === 'T') {
    measurementData.tensaoAnterior = valor;
  } else if (tipo === 'C') {
    measurementData.correnteAnterior = valor;
  }

  console.log('Tens√£o:', measurementData.tensaoAnterior, 'Corrente:', measurementData.correnteAnterior);

  const timestamp = Date.now();
  sendToAMQP(ID_TENSAO, measurementData.tensaoAnterior, timestamp);
  sendToAMQP(ID_CORRENTE, measurementData.correnteAnterior, timestamp);
});
